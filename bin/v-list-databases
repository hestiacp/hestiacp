#!/bin/bash
# info: listing databases
# options: USER [FORMAT]
#
# example: v-list-databases user json
#
# This function for obtaining the list of all user's databases.

#----------------------------------------------------------#
#                Variables & Functions                     #
#----------------------------------------------------------#

# Argument definition
user=$1
format=${2-shell}

# Includes
# shellcheck source=/etc/hestiacp/devcp.conf
source /etc/hestiacp/devcp.conf
# shellcheck source=/usr/local/devcp/func/main.sh
source $HESTIA/func/main.sh
# load config file
source_conf "$HESTIA/conf/devcp.conf"

# JSON list function
json_list() {
	IFS=$'\n'
	i=1
	objects=$(grep "DB=" $USER_DATA/db.conf | wc -l)
	echo "{"
	while read str; do
		parse_object_kv_list "$str"
		echo -n '    "'$DB'": {
        "DATABASE": "'$DB'",
        "DBUSER": "'$DBUSER'",
        "HOST": "'$HOST'",
        "TYPE": "'$TYPE'",
        "CHARSET": "'$CHARSET'",
        "U_DISK": "'$U_DISK'",
        "SUSPENDED": "'$SUSPENDED'",
        "TIME": "'$TIME'",
        "DATE": "'$DATE'"
    }'
		if [ "$i" -lt "$objects" ]; then
			echo ','
		else
			echo
		fi
		((i++))
	done < <(cat $USER_DATA/db.conf)
	echo '}'
}

# SHELL list function
shell_list() {
	IFS=$'\n'
	echo "DATABASE   USER   HOST   TYPE   DISK   SPND   DATE"
	echo "--------   ----   ----   ----   ----   ----   ----"
	while read str; do
		parse_object_kv_list "$str"
		echo "$DB $DBUSER $HOST $TYPE $U_DISK $SUSPENDED $DATE"
	done < <(cat $USER_DATA/db.conf)
}

# PLAIN list function
plain_list() {
	IFS=$'\n'
	while read str; do
		parse_object_kv_list "$str"
		echo -ne "$DB\t$DBUSER\t$HOST\t$TYPE\t$CHARSET\t$U_DISK\t"
		echo -e "$SUSPENDED\t$TIME\t$DATE"
	done < <(cat $USER_DATA/db.conf)
}

# CSV list function
csv_list() {
	IFS=$'\n'
	echo "DATABASE,DBUSER,HOST,TYPE,CHARSET,U_DISK,SUSPENDED,TIME,DATE"
	while read str; do
		parse_object_kv_list "$str"
		echo "$DB,$DBUSER,$HOST,$TYPE,$CHARSET,$U_DISK,$SUSPENDED,$TIME,$DATE"
	done < <(cat $USER_DATA/db.conf)
}

#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

check_args '1' "$#" 'USER [FORMAT]'
is_format_valid 'user'
is_object_valid 'user' 'USER' "$user"

#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

# Listing data
case $format in
	json) json_list ;;
	plain) plain_list ;;
	csv) csv_list ;;
	shell) shell_list | column -t ;;
esac

#----------------------------------------------------------#
#                       Hestia                             #
#----------------------------------------------------------#

exit
