module.exports = {
  apps: [
    {
      name: 'devcp-backend',
      script: './backend/dist/server.js',
      cwd: '/opt/devcp',
      instances: 'max',
      exec_mode: 'cluster',
      env: {
        NODE_ENV: 'production',
        PORT: 3001,
      },
      env_production: {
        NODE_ENV: 'production',
        PORT: 3001,
      },
      log_file: './logs/devcp-backend.log',
      out_file: './logs/devcp-backend-out.log',
      error_file: './logs/devcp-backend-error.log',
      log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
      merge_logs: true,
      max_memory_restart: '1G',
      node_args: '--max-old-space-size=1024',
      restart_delay: 4000,
      max_restarts: 10,
      min_uptime: '10s',
      kill_timeout: 5000,
      wait_ready: true,
      listen_timeout: 10000,
      health_check_grace_period: 3000,
    },
    {
      name: 'devcp-frontend',
      script: 'serve',
      args: '-s ./frontend/dist -l 3000',
      cwd: '/opt/devcp',
      instances: 1,
      exec_mode: 'fork',
      env: {
        NODE_ENV: 'production',
      },
      log_file: './logs/devcp-frontend.log',
      out_file: './logs/devcp-frontend-out.log',
      error_file: './logs/devcp-frontend-error.log',
      log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
      merge_logs: true,
      max_memory_restart: '500M',
      restart_delay: 4000,
      max_restarts: 10,
      min_uptime: '10s',
    },
  ],

  deploy: {
    production: {
      user: 'devcp',
      host: ['your-production-server.com'],
      ref: 'origin/main',
      repo: 'https://github.com/Ghost-Dev9/DevCP.git',
      path: '/opt/devcp',
      'post-deploy': 'cd modern-devcp && npm install && npm run build:all && pm2 reload ecosystem.config.js --env production',
      'pre-setup': 'apt update && apt install git -y',
    },
    staging: {
      user: 'devcp',
      host: ['your-staging-server.com'],
      ref: 'origin/develop',
      repo: 'https://github.com/Ghost-Dev9/DevCP.git',
      path: '/opt/devcp-staging',
      'post-deploy': 'cd modern-devcp && npm install && npm run build:all && pm2 reload ecosystem.config.js --env staging',
      'pre-setup': 'apt update && apt install git -y',
    },
  },
}